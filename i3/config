# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Fira Mono for Powerline, FontAwesome 10

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window pixel 2
new_float normal

# Hide borders
hide_edge_borders none

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec termite

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
# bindsym Mod1+space exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindsym Mod1+space exec --no-startup-id i3-dmenu-desktop --dmenu='~/dotfiles/i3/scripts/rofi.sh'

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# workspace back and forth (with/without active container)
#workspace_auto_back_and_forth yes
bindsym $mod+Tab workspace back_and_forth
bindsym $mod+Shift+Tab move container to workspace back_and_forth; workspace back_and_forth

# split orientation
bindsym $mod+b split h;exec notify-send -a 'i3' 'tile horizontally'
bindsym $mod+v split v;exec notify-send -a 'i3' 'tile vertically'

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Workspace names
set $ws1 "1  "
set $ws2 "2  "
set $ws3 "3  "
set $ws4 "4  "
set $ws5 "5"
set $ws6 "6"
set $ws7 "7  "
set $ws8 "8  "
set $ws9 "9  "
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8
bindsym $mod+Ctrl+9 move container to workspace $ws9
bindsym $mod+Ctrl+0 move container to workspace $ws10

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9; workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10; workspace $ws10

# Open applications on specific workspaces
# assign [class="Thunderbird"] $ws1
# assign [class="Pale moon"] $ws2
# assign [class="Pcmanfm"] $ws3
# assign [class="Skype"] $ws5
assign [class="(?i)Emacs"] → $ws1
assign [class="(?i)Atom"] → $ws1
assign [class="(?i)Google-chrome"] → $ws2
assign [class="(?i)Chromium"] → $ws2
assign [class="(?i)Slack"] → $ws7
assign [class="(?i)Thunderbird"] → $ws8
assign [class="(?i)Wine"] → $ws9
assign [class="qemu-system-x86_64"] → $ws10

# Open specific applications in floating mode
for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role=".*(?i)Preferences"] floating enable

for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable

for_window [title="alsamixer"] floating enable border pixel 1
for_window [title="File Transfer*"] floating enable
for_window [class="Galculator"] floating enable border pixel 1
for_window [class="GParted"] floating enable border normal
for_window [class="Lxappearance"] floating enable sticky enable border normal
for_window [class="Nitrogen"] floating enable sticky enable border normal
for_window [class="Pavucontrol"] floating enable
for_window [class="qt5ct"] floating enable sticky enable border normal
for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
for_window [class="Simple-scan"] floating enable border normal
for_window [class="Skype"] floating enable border normal
for_window [class="(?i)virtualbox"] floating enable border normal
for_window [class="Xfburn"] floating enable

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Set shut down, restart and locking features
set $mode_system "System (L)ock, (E)xit, (S)uspend, (R)eboot, (Q)uit/shutdown"
set $i3exit ~/dotfiles/i3/scripts/i3exit

mode $mode_system {
    bindsym l exec --no-startup-id $i3exit lock, mode "default"
    bindsym s exec --no-startup-id $i3exit suspend, mode "default"
    bindsym e exec --no-startup-id $i3exit logout, mode "default"
    bindsym r exec --no-startup-id $i3exit reboot, mode "default"
    bindsym q exec --no-startup-id $i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+BackSpace mode $mode_system

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start Applications
bindsym $mod+F2 exec chromium
bindsym $mod+F3 exec pcmanfm
bindsym $mod+Shift+F3 exec gksu pcmanfm
bindsym $mod+Shift+d --release exec "killall dunst; exec notify-send 'restart dunst'"
bindsym Print exec --no-startup-id i3-scrot
bindsym $mod+Print --release exec --no-startup-id i3-scrot -w
bindsym $mod+Shift+Print --release exec --no-startup-id i3-scrot -s
bindsym $mod+Ctrl+x --release exec --no-startup-id xkill

# Autostart applications
exec_always --no-startup-id numlockx on
exec --no-startup-id xrdb ~/.Xresources
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id ~/.screenlayout/screenlayout.sh && nitrogen --restore; sleep 1; compton -b --config ~/.config/compton/compton.conf
exec_always --no-startup-id fix_xcursor
exec --no-startup-id xset r rate 200 50
exec --no-startup-id setxkbmap -option 'caps:ctrl_modifier'
exec --no-startup-id xcape -e 'Caps_Lock=Escape'
exec --no-startup-id aplay -q ~/Music/The-Microsoft-Sound.wav

# Colors Base16 Tomorrow (made dark)
set $c_foreground #d6d6d6
set $c_background #1d1f21

set $c_black  #1d1f21
set $c_gray_1 #282a2e
set $c_gray_2 #4d4d4c
set $c_gray_3 #969896
set $c_gray_4 #8e908c
set $c_gray_5 #d6d6d6
set $c_gray_6 #e0e0e0
set $c_white  #ffffff

set $c_red     #c82829
set $c_orange  #f5871f
set $c_yellow  #eab700
set $c_green   #718c00
set $c_cyan    #3e999f
set $c_blue    #4271ae
set $c_magenta #8959a8
set $c_brown   #a3685a

# Start i3bar to display a workspace bar (plus the system information i3status if available)
bar {
    status_command i3blocks -c ~/.config/i3/i3blocks.conf
    position bottom
    tray_output primary

    font pango:Fira Mono for Powerline, FontAwesome 8

    strip_workspace_numbers yes
    separator_symbol "■■"

    colors {
        background $c_background
        statusline $c_foreground
        separator  $c_background

        # Type             border       bg             text
        focused_workspace  $c_green     $c_green       $c_background
        active_workspace   $c_blue      $c_blue        $c_background
        inactive_workspace $c_blue      $c_background  $c_gray_3
        urgent_workspace   $c_red       $c_red         $c_foreground
    }
}

# hide/unhide i3status bar
bindsym $mod+m bar mode toggle

# Theme colors
# Type                  border        bg           text           indicator
client.focused          $c_green      $c_green     $c_background  $c_blue
client.unfocused        $c_black      $c_black     $c_foreground
client.urgent           $c_red        $c_red       $c_background
client.background       $c_background

# Set inner/outer gaps
gaps inner 10
gaps outer -2

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on
